Future tasks:
  - Frontend using web project for that
    - Features:
      - Add/remove users, change password etc. (User Management)
      - Edit review settings for a user (Review Settings Management)
      - View TextSnippets for a user, edit, delete them, create new ones (Text Snippet Management)
    - Techstack:
      - Antd
      - Redux
    - TODOs
      - implement auth/profile in backend
      - implement auth/logout in backend
      - Add login page
      - Implement redirect to login page when not logged in
      - Implement User Management

      - Implement Review Settings Management
      - Implement Text Snippet Management
     


Low prio stuff:
   - Bug: Renaming user causes app to crash (tries to unsubscribe non existing user from reviews)                                // TODO
     - issue seems to only appear when app is run in dev mode (turbo dev), so no prio to fix this


---
MVP Top priorities:
  - Build Android App (for proper data input)                                                                                    // done
  - Fix pihole issues                                                                                                            // done
  - Fix security issues:                                                                                                         // done
      - Everyone can register a new user
         - make authorization for register endpoint mandatory  --> removed it and use UserController.create()
         - create default user admin (password: admin) when (users) database is empty
         - only admin user allowed to create new users --> could remove register endpoint completely
         - only admin is allowed to edit data of other users
         - normal users are only allowed to edit their data (e.g. a normal user cannot edit other's data - incl. settings or text snippets)
      - This user has unlimited rights, e.g. he can delete existing ones
         - add role based access control (admin vs normal user)
      - These issue need to be fixed before exposing the app to the public internet
      - Limit access to swagger page (e.g. Http basic auth)                                                                      // done
           (could add without auth in "development" mode and use "production" for deployed app)
      - Certificates for reverse proxy are committed to git                                                                      // done
        - Should have a private folder excluded from git
        - Could even check out if using Let's encrypt would be an option to get rid of certificate warnings

Others:
  - Test production setup (see how it performs when it is sending mails, e.g. possible to deploy to Raspberry Pi?)
     - Raspberry Pi deployement did not work, so use Raspberry Pi 3
      - Fixed issues:  
        - All passwords, JWT keys are already savely stored as Device Variables in balena dashboard
        - Disabled all unneeded ports an only expose port 80 and 443 of reverse proxy (80 is forwarded to secure 443 - https)
     - Test everything when deployed                                                                                             // done
        - Swagger reachable and possible to send commands       yes
        - Frontend reachable                                    yes
        - Frontend can reach backend (e.g. test login)          no --> see bug
        - Backend is reachable, e.g. https://<ip>/api           yes
             - wget --no-check-certificate https://192.168.1.194/api 
               was successfull, but internal links (e.g. to scripts) are not forwarded properly, e.g. ./api-docs/swagger-ui.css
                  is resolved to https://<ip>/api-docs/api-docs/swagger-ui.css (maybe the updated default.conf for the reverse proxy helps)
     - Fix bug in frontend: uses a hardcoded localhost to access backend                                                         // done
     - Fix bug in backend - users endpoint                                                                                       // done
         updated user (changed username and password and no longer could login)
     - Add pihole service                                                                                                        // done

Additional Bugs/ Improvements

- /api/users/{id} does not show all available properties, e.g. filterReviewSelectionStrategyType                                 // done
   --> "property filterReviewStrategyTitle should not exist"
   // not yet working at all
- Get rid of need for running ./prepare_balena.sh - e.g. supply proper .dockerignore files in apps directories                   // done

- Update of reviewFreqAndTime should trigger a reload of the review timer                                                        // done

----
(here below are still some todo tasks)

- Improve config of backend, e.g. to use base config from typescript-config                                          [done]
   - fix all linter warnings of backend first
- Add a shared library project for shared code between frontend and backend (e.g. dtos)                              [done]
- Integrate tanstack query into frontend and establish link to backend                                               [done]
- Dockerfiles for frontend and backend                                                                               [done]
   https://github.com/vercel/turborepo/tree/main/examples/with-docker
   @frontend (nextjs):
      - decide what base image
      - decide what commands (pnpm, turbo; should not need yarn, see TODOs)
   @backend (nestjs):
      - install turbo and pnpm into the container (as for frontend)
      - check other TODOs (should be resolved when frontend is ok)
- docker compose starting frontend, backend containers + db container; could also add reverse proxy (using nginx)    [done]
   docker-compose.yml:
      - prepared for reverse proxy, but for simple setup could go without it
        (requires again new config)
      - testing of setup and improving (check with my (infrastructure - homelab) docker containers)
- docker deployment missing points                                                                                   [done]
   - run db migrations (decide how to do it --> currently 500er error because db not setup)
   - for simplicity configured a drop - create at each application start

- throw away unneeded stuff (web, docs, ui package)                                                                  // TODO

- features dev                                                                                                       
  - CSV upload (text snippet data)   POST                                                                            [done]
     - similar to Create new snippet, but in bulk
  - TextSnippet resource                                                                                             [done]
      - Create new snippet               POST
      - Display snippet data             GET        +  GET all snippets for a USER
      - Update data                      PUT/ PATCH
      - Delete data                      DELETE
  - Send review email to user                                                                                        // -
      - Basic email sending (e.g. confirm mail after register)                                                       [done]
            - tested using mailtrap.io
      - Sending the review email                                                                                     [done]
          - TODOs:
             - proper styling of email                                                                               [done, first version]
             - better selection algorithm of review items (not just random)                                          [done, first version]
             - configurable                                                                                          [done]
                - review interval, e.g. at 8:00 am
                - number of text snippets to select
             - start cronjob for a newly registered user                                                             [done]
             - handle the case when user has nothing to review/ db is empty                                          [done]
               e.g. do not send an email (maybe only log a warning to console)
          - styling of email, e.g. use proper html (analyse readwise mails)                                          // -
          - time interval, e.g. daily at 8:00 AM; instant send for test                                              // -
          - use a (configurable) Gmail account as the sender                                                         // -
              - could use mailtrap however this only allows to send to your own email address
                (else you need a registered domain)
          - send email to configured email of the user                                                               [done]

   - Review Stategies - Advanced                                                                                     // in progress
      - Make FilterReviewSelectionStrategy configurable, e.g. add to user entity:                                    [done]
         - type: AUTHOR or TITLE
         - filter_author: string
         - filter_title: string
         - Always set the matchSubstring and disable case sensitivity (e.g. convert everything to lowercase)
      - e.g. implement a weighting scheme to rank which text snippets shall be sent                                  // TODO
           e.g. frequency tuning, which title shall appear more often in the review?
      - highlight recency: bias to selection of older or newer highlights                                            // TODO
   - Improved styling of review email                                                                                // TODO
      - e.g. organise snippets in blocks
      - have a line below title + author (and above the text)
      - show the "by <author>" in a different color
      - show the "Page <n>" in a different color (e.g. could use same style as for author)
      - Instead of "Here a very cool subheading is written :)" just add a line/ separator
      - heading with version number (optional)

- build an android app using react native with ocr functionality to add text snippets                                // TODO

- add proper testing: unit/ integration testing                                                                      // in progress
    - simple tests created for FilterReviewSelectionStrategy
    - main issues:
        (1) handling of test data
        (2) dependency injection (current solution is to not use it), mocking all db access would be a lot of work
    - review schedule service, various strategies, testing of output
      (without sending any email)
