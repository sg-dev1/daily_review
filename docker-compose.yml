services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    restart: unless-stopped
    ports:
      - 3000:3000

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    restart: unless-stopped

  database:
    container_name: database
    #image: my-database
    image: postgres:16.5-alpine3.20
    #env_file:
    #  - .env
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: '123'
      #POSTGRES_PASSWORD: ${DB_PASSWORD}
      #POSTGRES_USER: ${DB_USERNAME}
      #POSTGRES_DB: ${DB_DATABASE_NAME}
      #PG_DATA: /var/lib/postgresql/data
    volumes:
      - db_volume:/var/lib/postgresql/data
    #  - ./../../backup:/backup

  rproxy:
    container_name: rproxy
    image: my-rproxy
    #image: nginx:1.27.2-alpine3.20
    # TODO need to create config

volumes:
  db_volume:
